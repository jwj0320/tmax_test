#include <stdio.h> 
#include <sqlca.h> 
#include <string.h>
#include <usrinc/atmi.h>
#include "../../sdl/mem_sdl.h"
#define USERPASS "tibero/tmax" 




void CREATETABLE(TPSVCINFO *msg)
{
    EXEC SQL BEGIN DECLARE SECTION;                                
        VARCHAR userpass[20] = {strlen(USERPASS), USERPASS}; 
    EXEC SQL END DECLARE SECTION; 

    char *sendbuf;

    EXEC SQL CONNECT :userpass;

    if ((sendbuf = tpalloc("STRING", NULL, 0)) == NULL)
    {
        fprintf(stderr,"Error allocation buffer\n");
        printf("%s\n",tpstrerror(tperrno));
        strcpy(msg->data,"Error allocation buffer");
        tpreturn(TPFAIL, 0, msg->data, 0, TPNOFLAGS);
    }
    
    EXEC SQL CREATE TABLE MEMBER(
        id VARCHAR2(50) NOT NULL,
        name VARCHAR2(50) NOT NULL,
        dept VARCHAR2(50)
    );

    if(sqlca.sqlcode){
        printf("%s\n",sqlca.sqlerrm.sqlerrmc);
        strcpy(sendbuf,sqlca.sqlerrm.sqlerrmc);
        tpreturn(TPFAIL, 0, sendbuf, 0, TPNOFLAGS);
    }

    EXEC SQL COMMIT WORK RELEASE;

    if(sqlca.sqlcode){
        printf("%s\n",sqlca.sqlerrm.sqlerrmc);
        strcpy(sendbuf,sqlca.sqlerrm.sqlerrmc);
        tpreturn(TPFAIL, 0, sendbuf, 0, TPNOFLAGS);
    }

    strcpy(sendbuf,"Table is created.");

    tpreturn(TPSUCCESS, 0, sendbuf, 0, TPNOFLAGS);
}



void ADDMEMBER(TPSVCINFO *msg)
{ 
    EXEC SQL BEGIN DECLARE SECTION;                                
        VARCHAR userpass[20] = {strlen(USERPASS), USERPASS}; 
    EXEC SQL END DECLARE SECTION; 


    EXEC SQL CONNECT :userpass;

    char *id, *name, *dept;

    struct mem *data=(struct mem*)msg->data;

    // strcpy(id, data->id);
    // strcpy(name, data->name);
    // strcpy(dept, data->dept);
    id = data->id;
    name = data->name;
    dept = data->dept;


    EXEC SQL INSERT INTO MEMBER(
        id,
        name,
        dept
    ) values
    (
        id,
        name,
        dept
    );


    EXEC SQL COMMIT WORK RELEASE;
}
